name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pytest

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=venv,__pycache__,.augment,web-bundles
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=venv,__pycache__,.augment,web-bundles

    - name: Check Python syntax
      run: |
        python -m py_compile config.py
        python -m py_compile modules/*.py

    - name: Test imports
      run: |
        python -c "import sys; print(f'Python {sys.version}')"
        python -c "import streamlit; import pandas; import numpy; print('Core imports successful!')"

    - name: Run tests (if available)
      run: |
        if [ -d "tests" ]; then
          pytest tests/ -v
        else
          echo "No tests directory found, skipping tests"
        fi
      continue-on-error: true

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Check code formatting
      run: |
        pip install black
        black --check --diff . --exclude='venv|__pycache__|.augment|web-bundles' || true

    - name: Security check
      run: |
        pip install safety
        safety check --json || true
      continue-on-error: true

